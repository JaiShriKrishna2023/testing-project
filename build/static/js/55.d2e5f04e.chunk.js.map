{"version":3,"file":"static/js/55.d2e5f04e.chunk.js","mappings":"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","sources":["components/processingScreen.jsx","connected-components/ProcessingScreen/processingScreenConnect.jsx","constants/constants.js","components/rightpanel.style.js","globalStyle.js","components/rightPanelView.jsx","middleware/rightPanel/rightPanelActionTypes.js","middleware/rightPanel/rightPanelReducer.js","middleware/rightPanel/rightPanelSelector.js","connected-components/rightpanelconnect.jsx","components/common-components/cards/card.style.js","components/common-components/cards/cards.jsx","components/productsCategory/productsCategory.jsx","connected-components/productsCategoryConnect.jsx","components/ViewRouteMapper.jsx","components/common-components/sidebar/sidebar.style.js","components/common-components/sidebar/sidebarItem.jsx","components/common-components/sidebar/sidebar.jsx","middleware/actions/appRouterActionTypes.js","connected-components/sidebarConnect.jsx","middleware/rightPanel/rightPanelActionCreator.js","middleware/actions/appRouterActionCreator.js","components/container.jsx","middleware/appInitialization/appInitializeActionTypes.js","middleware/appInitialization/appInitializeActionCreator.js","middleware/appInitialization/appInitializeReducer.js","middleware/appInitialization/appInitializeSelector.js","connected-components/appInitializationConnect.jsx","connected-components/viewrouterconnect.js","components/header.jsx","components/footer.jsx","components/layout.jsx","transformers/rightPanelTransformer.js","services/baseAPI.js","middleware/rightPanel/rightPanelTask.js","middleware/rightPanel/rightpanelProcessor.js","middleware/rightPanel/rightPanelWatcher.js","transformers/appInitializeTransformer.js","middleware/appInitialization/appInitializeTask.js","middleware/appInitialization/appInitializeProcessor.js","middleware/appInitialization/appInitializeWatcher.js","middleware/sagas/rootSaga.js","middleware/redux/reducers/appRouterReducer.js","middleware/redux/reducers/rootReducer.js","middleware/store/store.js","App.jsx"],"sourcesContent":["import React from 'react';\n\nconst ProcessingScreen=()=>{\n\n    return(<div>Processing....</div>)\n}\n\nexport default ProcessingScreen;","import React from 'react';\nimport ProcessingScreen from '../../components/processingScreen';\n\n\nconst ProcessingScreenConnect=()=>{\n\n    return (<ProcessingScreen/>)\n}\n\nexport default ProcessingScreenConnect;\n","export const VIEW_ROUTE_SCREENS={\n    PROCESSING: 'PROCESSING_VIEW',\n    RIGHT_PANEL_VIEW:'RIGHT_PANEL_VIEW'\n   \n}\n\nexport const RIGHT_PANEL_VIEW_SCREENS={\n    PRODUCT_CATEGORY_VIEW:'PRODUCT_CATEGORY_VIEW'\n}\n","import styled from 'styled-components';\nconst RightPanelContainer=styled.div`\nmargin-left:10%;\nmargin-right: auto;\nmargin-top:10%;\ntext-align: center;\nborder: 1px solid #ccc;\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 1em;\n  text-align: center;\n  color: palevioletred;\n`;\n\nexport {RightPanelContainer, PageTitle}","import styled from 'styled-components';\n\nconst GridContainer=styled.div` \n    display: grid;\n    grid-template-columns: auto auto auto;\n    padding: 10px;\n    margin-top: 0%;\n    margin-left: 0%;\n    background-color: rgb(15 155 197 / 28%);\n  `;\n\n  const GridItem=styled.div` \n  background-color: rgba(255, 255, 255, 0.8);\n  border: 1px solid transparent;\n  font-size: 30px;\n  text-align: center;\n  width: 100%;\n  height: auto;\n  max-width: 100%;\n  display: flex;\n  overflow: scroll;\n  `;\n\n  \n\n  export {GridContainer, GridItem}","import React, { useEffect, useState } from 'react'\nimport {PageTitle, RightPanelContainer} from './rightpanel.style';\nimport { GridContainer, GridItem } from '../globalStyle';\nimport Viewrouterconnect from '../connected-components/viewrouterconnect';\nconst RightPanelView = (props) => {\n\n \nconsole.log('rightPanelView',props);\n   \n return(\n <RightPanelContainer id={'rightpanel'}>\n   <PageTitle>{props?.selectedProduct}</PageTitle>\n  <GridContainer>\n  <GridItem>\n \n  <Viewrouterconnect/>\n  </GridItem>\n  \n    </GridContainer>\n    </RightPanelContainer>)\n}\nexport default RightPanelView;","\nexport const SET_RIGHT_PANEL_SCREEN_TYPE='SET_RIGHT_PANEL_SCREEN_TYPE';\nexport const RIGHT_PANEL_VIEW_SCREENS='RIGHT_PANEL_VIEW_SCREENS';\nexport const SET_SELECTED_PRODUCTS='SET_SELECTED_PRODUCTS';\n\n\n","import { SET_RIGHT_PANEL_SCREEN_TYPE, SET_SELECTED_PRODUCTS } from './rightPanelActionTypes';\nconst rightPanelInitialState={\n    previousRightPanelType:'',\n    rightPanelType:'',\n    selectedProduct:'',\n    productOptions:{}\n\n}\nconst rightPanelReducer=(state=rightPanelInitialState, action)=>{\n    switch (action.type){\n        case SET_RIGHT_PANEL_SCREEN_TYPE:\n            return{\n                ...state,\n                previousRightPanelType:state.rightPanelType,\n                rightPanelType:action.data\n                \n            };\n            case SET_SELECTED_PRODUCTS:\n                return{\n                    ...state,\n                    selectedProduct:action?.data?.selectedItem,\n                    productOptions:action?.data?.productOptions\n                    \n                };\n\n            \n            default:{\n                return state;\n            }\n    }\n}\n\nexport {rightPanelInitialState, rightPanelReducer};","import {createSelector} from 'reselect';\nimport { rightPanelInitialState} from './rightPanelReducer';\n\nexport const selectRightPanelDomain=state=> state.rightPanelReducer || rightPanelInitialState;\n\nexport const selectRightPanelProps=createSelector(\n    selectRightPanelDomain,({\n        productCategoryType,\n        selectedProduct,\n        productOptions\n\n    })=>({\n        productCategoryType,\n        selectedProduct,\n        productOptions\n    })\n\n)","import React, { useEffect, useState } from 'react';\nimport RightPanelView from '../components/rightPanelView';\nimport { useSelector } from 'react-redux';\nimport { selectRightPanelProps } from '../middleware/rightPanel/rightPanelSelector';\n\nconst RightPanelConnect=(props)=>{\n\n    const {selectedProduct} =useSelector(selectRightPanelProps);\n\n    return (<RightPanelView selectedProduct={selectedProduct}>{props?.children}</RightPanelView>)\n}\n\nexport default RightPanelConnect;","import styled from 'styled-components';\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\nconst CardContainer = styled.div`\nmax-width: 100%;\n    height: auto;\n    background-color: rgba(204, 204, 204, 0.24);\n    border: 1px solid rgb(204, 204, 204);\n    min-width: 172px;\n\n  `;\n  const CardImg = styled.div`\n  background-image: url(${props => props.img});\n  width: 100%;\n  height: 100px;\n  background-repeat: no-repeat;\n  background-size: 100% 100%;\n  background-position-x: center;\n`;\nconst Title = styled.h2`\n  color: rgb(59 55 55 / 86%);\n  font-weight: normal;\n  font-size:100%;\n`\nconst Description = styled.p`\n  color: rgb(59 55 55 / 86%);\n  font-weight: 300;\n  `\n\nexport {Title, Description, CardContainer, CardWrapper, CardImg}","import React from 'react'\nimport {Title, Description, CardContainer, CardImg} from './card.style';\nconst Card = (props) => {\n  console.log(props)\n  const imgPath='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTFSQVX8vJ1-SJzkr_JPqNPjKQhs67nnQK10A&usqp=CAU';\n return(<CardContainer id={'cardContainer'}>\n  <CardImg id={'cardImage'} img={props?.imgPath}/>\n    <Title title={'cardTitle'}>{props?.title}</Title>\n    <Description description={'cardDescription'}>\n    {props?.description}\n    </Description>\n  </CardContainer>)\n}\nexport default Card;","import React, { Fragment } from 'react';\nimport Card from '../common-components/cards/cards';\n\n\n\n\nconst ProductsCategory=(props)=>{\n    console.log('productsCategory', props?.productOptions);\n\nreturn(\n    <Fragment>\n        {props?.productOptions && props?.productOptions.map((description, index)=>\n        <Card key={index} title={description?.name} imgPath={description?.imagePath}/>)}\n\n    </Fragment>\n)\n}\nexport default ProductsCategory;\n","import {memo} from \"react\";\nimport ProductsCategory from \"../components/productsCategory/productsCategory\";\nimport { selectRightPanelProps } from \"../middleware/rightPanel/rightPanelSelector\";\nimport { useSelector } from \"react-redux\";\n\n\nconst ProductsCategoryConnect=()=>{\n\n  const {selectedProduct, productOptions} =useSelector(selectRightPanelProps);\n    const ProductsCategoryProps={\n        selectedProduct,\n        productOptions\n        \n    }\n\n    console.log('selectedProduct', selectedProduct);\n\n        return <ProductsCategory {...ProductsCategoryProps}/>\n      \n      \n    }\n    \n    export default memo(ProductsCategoryConnect);","import React from 'react';\nimport ProcessingScreenConnect from '../connected-components/ProcessingScreen/processingScreenConnect';\nimport {VIEW_ROUTE_SCREENS, RIGHT_PANEL_VIEW_SCREENS} from '../constants/constants';\nimport RightPanelConnect from '../connected-components/rightpanelconnect';\nimport ProductsCategoryConnect from '../connected-components/productsCategoryConnect';\n\nexport const ViewRouteMapper=[\n    {\n        id:VIEW_ROUTE_SCREENS.PROCESSING,\n        component:(<ProcessingScreenConnect/>)\n    },\n    {\n        id:VIEW_ROUTE_SCREENS.RIGHT_PANEL_VIEW,\n        component:(<RightPanelConnect/>)\n    },\n    {\n        id:RIGHT_PANEL_VIEW_SCREENS.PRODUCT_CATEGORY_VIEW,\n        component:(<ProductsCategoryConnect/>)\n    },\n\n    \n]","import styled from 'styled-components';\nconst SidebarWrapper=styled.div`\neight: auto;\n    width: 20%;\n    background-color: rgb(255, 255, 255);\n    z-index: 1;\n    overflow: auto;\n    border: 1px solid rgb(204, 204, 204);\n    top: 78px;\n    left: 5px;\n    max-width: 100%;\n    position: fixed !important;\n    min-height: 645px;\n`\nconst ItemContainer=styled.div`\nfont-family: Verdana, sans-serif;\n    font-size: 15px;\n    line-height: 1.5;\n    \n    background-color: aliceblue;\n    padding: 0px 3px 0px 3px;\n`;\nconst ItemsList=styled.a`\nwidth: 100%;\n    display: block;\n    padding: 12px 0px 10px 15px;\n    border: none;\n    white-space: normal;\n    float: none;\n    outline: 0px;\n    text-align: left;\n    color: #CD2;\n    font-size: 150%;\n`;\n\n\n\nexport {SidebarWrapper, ItemContainer, ItemsList}\n","import React, { useState } from \"react\";\nimport {\n  ItemsList,\n  ItemContainer\n} from \"./sidebar.style\";\nimport './sidebar.style.css'\n\nconst SidebarItems = (props) => {\n  console.log('sidebarProps', props);\n  return (\n    <ItemContainer>\n      {props?.sidebarData && props?.sidebarData.map((itemData, index) => (\n        \n        <ItemsList\n          key={index}\n          onClick={() => props?.handleMenuSelection(itemData?.id, itemData?.productName)}\n          className={itemData.id === props?.activeItem ? \"activeProduct\" : \"\"}\n        >\n         {itemData.productName}\n        </ItemsList>\n      ))}\n    </ItemContainer>\n  );\n};\n\nexport default SidebarItems;","import React from 'react';\nimport{SidebarWrapper} from './sidebar.style';\nimport SidebarItems from './sidebarItem';\n\nconst Sidebar=(props)=>{\n    console.log('sidebar', props);\n\nreturn(<SidebarWrapper id={'sidebar'}>\n    <SidebarItems {...props}></SidebarItems>\n</SidebarWrapper>)\n}\nexport default Sidebar;\n","export const SET_VIEW_SCREEN_TYPE='SET_VIEW_SCREEN_TYPE';","import { memo, useState } from \"react\";\nimport Sidebar from \"../components/common-components/sidebar/sidebar\";\nimport { useDispatch } from \"react-redux\";\nimport { RIGHT_PANEL_VIEW_SCREENS } from \"../constants/constants\";\nimport { setViewScreenTypeAction } from \"../middleware/actions/appRouterActionCreator\";\nimport { setSelectedProductTypeAction } from \"../middleware/rightPanel/rightPanelActionCreator\";\n\n\nconst SideBarConnect=(props)=>{\n    console.log('sidebarConnect', props);\n    const dispatch=useDispatch();\n\n    const [activeItem, setActiveItem] = useState(0);\n  const handleMenuSelection=(id, selectedItem)=>{\n    setActiveItem(id);\n    dispatch(setSelectedProductTypeAction(\n        {\n        selectedItem:selectedItem,\n        productOptions:props?.sidebarData[id-1]?.productOptions\n        }\n        ));\n    dispatch(setViewScreenTypeAction(RIGHT_PANEL_VIEW_SCREENS.PRODUCT_CATEGORY_VIEW));\n\n     }\n    \n    const sidebarProps={\n        sidebarData:props?.sidebarData,\n        activeItem,\n        handleMenuSelection,\n        setActiveItem\n\n    }\n\n        return (<Sidebar {...sidebarProps}/>)\n    }\n    \n    export default memo(SideBarConnect);","import { SET_RIGHT_PANEL_SCREEN_TYPE, SET_SELECTED_PRODUCTS } from \"./rightPanelActionTypes\";\n\nexport const setRightPanelScreenTypeAction=(data)=>({\n    type:SET_RIGHT_PANEL_SCREEN_TYPE,\n    data\n\n});\n\nexport const setSelectedProductTypeAction=(data)=>({\n    type:SET_SELECTED_PRODUCTS,\n    data\n\n});\n\n\n\n","import { SET_VIEW_SCREEN_TYPE } from \"./appRouterActionTypes\";\n\nexport const setViewScreenTypeAction=(data)=>({\n    type:SET_VIEW_SCREEN_TYPE,\n    data\n\n});","import React, { Fragment } from 'react';\nimport RightPanelConnect from '../connected-components/rightpanelconnect';\nimport SidebarConnect from '../connected-components/sidebarConnect';\nimport Viewrouterconnect from '../connected-components/viewrouterconnect';\n\n\nconst Container=(props)=>{\n\n console.log('container', props);\n\n    return(<Fragment>\n        {console.log(props)}\n        <SidebarConnect sidebarData={props?.productProps?.products}/>\n     <RightPanelConnect/>\n       \n         \n      </Fragment>)\n}\n\nexport default Container;","export const APP_INITIALIZE_DATA='APP_INITIALIZE_DATA';\nexport const SET_APP_INITIAL_DATA='SET_APP_INITIAL_DATA';\n\n","// import { APP_INITIALIZE_DATA } from \"./appInitializeActionTypes\";\n\nimport { APP_INITIALIZE_DATA, SET_APP_INITIAL_DATA } from \"./appInitializeActionTypes\";\n\nexport const getAppinitializeTypeAction=(data)=>({\n    type:APP_INITIALIZE_DATA,\n    data\n\n});\n\nexport const setAppDataActionTypeAction=(data)=>({\n    type:SET_APP_INITIAL_DATA,\n    data\n\n});\n\n","import { APP_INITIALIZE_DATA, SET_APP_INITIAL_DATA } from \"./appInitializeActionTypes\";\n\nconst appInitialState={\nappInitialData:false,\nappInitialDataObj:{}\n\n}\nconst appInitializeReducer=(state=appInitialState, action)=>{\n    switch (action.type){\n        case APP_INITIALIZE_DATA:\n            return{\n                ...state,\n                appInitialData:action.data\n            };\n            case SET_APP_INITIAL_DATA:\n                return{\n                    ...state,\n                    appInitialDataObj:action.data\n                };\n\n            \n            default:{\n                return state;\n            }\n    }\n}\n\nexport {appInitialState, appInitializeReducer};","import {createSelector} from 'reselect';\nimport { appInitialState} from './appInitializeReducer';\n\nexport const selectAppInitialDomain=state=> state.appInitializeReducer || appInitialState;\n\n\nexport const selectAppInitialProps=createSelector(\n    selectAppInitialDomain,({\n        appInitialDataObj\n\n    })=>({\n        appInitialDataObj\n    })\n\n)","import React, {memo,  useEffect} from 'react';\nimport Container from '../components/container';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAppinitializeTypeAction } from '../middleware/appInitialization/appInitializeActionCreator';\nimport { selectAppInitialProps } from '../middleware/appInitialization/appInitializeSelector';\nconst AppInitializationConnect=()=>{\nconst dispatch=useDispatch();\n    useEffect(()=>{\n        dispatch(getAppinitializeTypeAction(true));\n    },[]);\n\nconst {appInitialDataObj}=useSelector(selectAppInitialProps);\n    return (<Container productProps={appInitialDataObj}/>)\n}\n\nexport default memo(AppInitializationConnect);","import React, {memo} from 'react';\nimport {compose} from 'redux';\nimport {useSelector} from 'react-redux';\nimport {ViewRouteMapper} from '../components/ViewRouteMapper';\nimport AppInitializationConnect from './appInitializationConnect';\n\nconst ViewRouterConnect=()=>{\n    const viewType=useSelector(\n        (state)=>state.appRouterReducer.viewScreenType\n    );\n    const component=ViewRouteMapper.find((x)=>x.id===viewType)?.component;\nif(component){\n    return component\n}\nreturn <div></div>\n\n}\nexport default compose(memo)(ViewRouterConnect);","import React from 'react';\n\nconst Header=()=>{\n\n    return(<header>{'Anika Food Store'}</header>)\n\n}\nexport default Header;","import React from 'react';\n\nconst Footer=()=>{\n\n    return(<footer>Footer</footer>)\n\n}\nexport default Footer;","import React, { memo, Fragment } from 'react';\nimport Viewrouterconnect from '../connected-components/viewrouterconnect';\nimport Header from './header';\nimport Footer from './footer';\nimport AppInitializationConnect from '../connected-components/appInitializationConnect';\n\nconst Layout=()=>{\n    return(\n        <Fragment>\n<Header/>\n<AppInitializationConnect/>\n\n<Footer/>\n        </Fragment>\n  )\n\n}\nexport default memo(Layout);","export function* rightPanelTransformer(apiResponse){\n    const data={};\n    const error={};\n    let isSuccess=false;\n\n    if(apiResponse?.statusCode===200){\n        isSuccess=true;\n        data=apiResponse?.data\n    }else{\n        isSuccess=false;\n        error=apiResponse?.error\n    }\n    return {data, error, isSuccess};\n}","import axios from 'axios';\n\n// export const getService=axios.get('https://api.github.com/users/mapbox')\n//   .then((response) => {\n    \n//     const responseData={...response.data};\n//     return {response:responseData}\n//   });\n\n  export async function getService(serviceUrl) {\n    console.log('serviceUrl', serviceUrl);\n    const response = await axios.get(serviceUrl);\n    return response;\n  }","import {call} from 'redux-saga/effects';\nimport {rightPanelTransformer} from '../../transformers/rightPanelTransformer';\nimport { getService } from '../../services/baseAPI';\n\nexport function* productCategoryTask(){\n    console.log('productCategoryTask');\n    const serviceUrl='https://jsonplaceholder.typicode.com/posts';\n\n    const response =yield call(getService, serviceUrl);\n    console.log('response',  response);\n    if(response){\n        const {isSuccess, data, error}=yield call(rightPanelTransformer, response);\n\n        console.log('data',  data);\n        return{isSuccess, data, error}\n    }\n    \n\n    \n\n}","import {put, call, select, take} from 'redux-saga/effects';\nimport {productCategoryTask} from './rightPanelTask';\n\n\nexport function* rightPanelProcessor(){\n\n    try{\n        const {isSuccess, data}=yield call(productCategoryTask);\n        if(isSuccess){\n            console.log(data);\n        }else{\n            console.log('no data')\n        }\n\n    }catch(error){\nconsole.log('some api error');\n\n    }\n\n}","import { takeLatest } from \"redux-saga/effects\";\nimport {rightPanelProcessor} from './rightpanelProcessor';\nimport {RIGHT_PANEL_VIEW_SCREENS} from './rightPanelActionTypes';\n\nexport const rightPanelWatcher=[\n    takeLatest(RIGHT_PANEL_VIEW_SCREENS, rightPanelProcessor)\n];","export function* appInitializeTransformer(apiResponse){\n    let data={};\n    let error={};\n    let isSuccess=false;\n    console.log('transformer::', apiResponse);\n\n    if(apiResponse?.status===200){\n        isSuccess=true;\n        data=apiResponse?.data\n    }else{\n        isSuccess=false;\n        error=apiResponse?.error\n    }\n    console.log('data::', data);\n    return {data, error, isSuccess};\n}","import {call} from 'redux-saga/effects';\nimport {appInitializeTransformer} from '../../transformers/appInitializeTransformer';\nimport { getService } from '../../services/baseAPI';\n\nexport function* appInitializeTask(){\n    console.log('appInitializeTask');\n    const serviceUrl='https://api.mocki.io/v2/c99bba7e/appData';\n\n    const response =yield call(getService, serviceUrl);\n    console.log('response',  response);\n    if(response){\n        const {isSuccess, data, error}=yield call(appInitializeTransformer, response);\n\n        console.log('data',  data);\n        return{isSuccess, data, error}\n    }\n    \n\n    \n\n}","import {call, put} from 'redux-saga/effects';\nimport {appInitializeTask} from './appInitializeTask';\nimport {setAppDataActionTypeAction } from './appInitializeActionCreator';\n\n\nexport function* appInitializeProcessor(){\n\n    try{\n        const {isSuccess, data}=yield call(appInitializeTask);\n        if(isSuccess){\n            console.log('processor',data);\n            yield put(setAppDataActionTypeAction(data));\n            return;\n            \n        }else{\n            console.log('no data')\n        }\n\n    }catch(error){\nconsole.log('some api error');\n\n    }\n\n}\n\n","import { takeLatest } from \"redux-saga/effects\";\nimport {appInitializeProcessor} from './appInitializeProcessor';\nimport {APP_INITIALIZE_DATA, SET_APP_INITIAL_DATA} from './appInitializeActionTypes';\n\nexport const appInitializeWatcher=[\n    takeLatest(APP_INITIALIZE_DATA, appInitializeProcessor)\n    // takeLatest(SET_APP_INITIAL_DATA, appInitializeProcessor)\n\n    \n];","import {all} from 'redux-saga/effects';\nimport { rightPanelWatcher } from '../rightPanel/rightPanelWatcher';\nimport { appInitializeWatcher } from '../appInitialization/appInitializeWatcher';\nexport default function* rootSaga(){\nyield all([\n    // ...rightPanelWatcher,\n    ...appInitializeWatcher\n])\n    \n}","import {SET_VIEW_SCREEN_TYPE} from '../../actions/appRouterActionTypes';\nconst appRouterInitialState={\n    viewScreenType:'',\n\n}\nconst appRouterReducer=(state=appRouterInitialState, action)=>{\n    switch (action.type){\n        case SET_VIEW_SCREEN_TYPE:\n            return{\n                ...state,\n                viewScreenType:action.data\n            };\n            default:{\n                return state;\n            }\n    }\n}\n\nexport {appRouterInitialState, appRouterReducer};","import { combineReducers } from \"redux\";\nimport { appRouterInitialState, appRouterReducer } from \"./appRouterReducer\";\nimport { appInitialState, appInitializeReducer } from \"../../appInitialization/appInitializeReducer\";\nimport { rightPanelInitialState, rightPanelReducer } from \"../../rightPanel/rightPanelReducer\";\n\nconst initialState={\nappRouterReducer:appRouterInitialState,\nappInitializeReducer:appInitialState,\nrightPanelReducer:rightPanelInitialState\n};\nconst rootReducer=(state, action)=>{\nreturn appReducer(state, action);\n\n}\n\nexport const appReducer=combineReducers({\n    appRouterReducer,\n    appInitializeReducer,\n    rightPanelReducer\n})\n\nexport {rootReducer, initialState}","\nimport { createStore, applyMiddleware } from 'redux'; \nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas/rootSaga';\nimport {rootReducer} from '../redux/reducers/rootReducer';\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n  rootReducer,\n  {},\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n)\nsagaMiddleware.run(rootSaga)\n\nexport default store","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Layout from \"./components/layout\";\nimport {Provider } from 'react-redux';\nimport store from './middleware/store/store'\n\nconst App = () => (\n  <div className=\"container\">\n   <Fragment>\n\n     <Provider store={store} > \n    <Layout>\n    </Layout>\n    </Provider>\n   </Fragment>\n  </div>\n);\nReactDOM.render(<App />, document.getElementById(\"app\"));\n"],"names":["_jsx","children","ProcessingScreen","VIEW_ROUTE_SCREENS","RIGHT_PANEL_VIEW_SCREENS","RightPanelContainer","styled","_templateObject","_taggedTemplateLiteral","PageTitle","_templateObject2","GridContainer","GridItem","props","console","log","_jsxs","id","selectedProduct","Viewrouterconnect","SET_SELECTED_PRODUCTS","rightPanelInitialState","previousRightPanelType","rightPanelType","productOptions","selectRightPanelProps","createSelector","state","rightPanelReducer","_ref","productCategoryType","useSelector","RightPanelView","CardContainer","CardImg","_templateObject3","img","Title","_templateObject4","Description","_templateObject5","imgPath","title","description","Fragment","map","index","Card","name","imagePath","ProductsCategoryConnect","_useSelector","ProductsCategoryProps","ProductsCategory","_objectSpread","memo","ViewRouteMapper","component","ProcessingScreenConnect","RightPanelConnect","SidebarWrapper","ItemContainer","ItemsList","sidebarData","itemData","onClick","handleMenuSelection","productName","className","activeItem","SidebarItems","SET_VIEW_SCREEN_TYPE","SideBarConnect","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setActiveItem","sidebarProps","selectedItem","_props$sidebarData","data","type","setViewScreenTypeAction","Sidebar","_props$productProps","SidebarConnect","productProps","products","APP_INITIALIZE_DATA","SET_APP_INITIAL_DATA","setAppDataActionTypeAction","appInitialState","appInitialData","appInitialDataObj","selectAppInitialProps","appInitializeReducer","AppInitializationConnect","useEffect","Container","compose","_ViewRouteMapper$find","viewType","appRouterReducer","viewScreenType","find","x","Layout","Header","Footer","rightPanelTransformer","apiResponse","error","isSuccess","_regeneratorRuntime","wrap","_context","prev","next","statusCode","_readOnlyError","abrupt","stop","_marked","getService","_x","_getService","apply","arguments","_asyncToGenerator","mark","_callee","serviceUrl","response","axios","sent","productCategoryTask","_yield$call","call","rightPanelProcessor","t0","takeLatest","appInitializeTransformer","status","appInitializeTask","appInitializeProcessor","put","appInitializeWatcher","rootSaga","all","_toConsumableArray","appRouterInitialState","appReducer","combineReducers","length","undefined","action","_action$data","_action$data2","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","App","Provider","ReactDOM","document","getElementById"],"sourceRoot":""}